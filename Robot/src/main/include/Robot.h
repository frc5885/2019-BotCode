// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef _ROBOT_H
#define _ROBOT_H

#include "frc/WPILib.h"
#include "frc/commands/Command.h"
#include "frc/livewindow/LiveWindow.h"

// General functions

// return +-1 based on whether a number > or < 0
inline double SignOf(double value)
{
	return (value < 0.0 ? -1.0 : 1.0);
}

// return equality of floating point numbers to a given tolerance
inline bool Equals (double value1, double value2, double tolerance)
{
	return (fabs(value1 - value2) < tolerance);
}

// UI for robot
#include "ControllerState.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "Commands/AutonomousCommand.h"
#include "Subsystems/DriveSubSystem.h"
#include "Subsystems/HatchSubSystem.h"
#include "Subsystems/LiftSubSystem.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "OI.h"

// manually defined commands
#include "Commands/Teleop.h"

// Network table libarys
#include "networktables/NetworkTable.h"
#include "networktables/NetworkTableInstance.h"

// Limelight LED settings
enum
{
	LL_LEDS_ON = 0,
	LL_LEDS_OFF = 1,
	LL_LEDS_FORCE_BLINK = 2,
	LL_LEDS_FORCE_ON = 3
};

class Robot : public frc::TimedRobot {
public:
	frc::Command* autonomousCommand = nullptr;
	static std::unique_ptr<OI> oi;
	frc::LiveWindow *lw = frc::LiveWindow::GetInstance();
	frc::SendableChooser<frc::Command*> chooser;
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	static std::shared_ptr<DriveSubSystem> driveSubSystem;
	static std::shared_ptr<LiftSubSystem> liftSubSystem;
	static std::shared_ptr<HatchSubSystem> hatchSubSystem;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

	// Limelight network table
	static std::shared_ptr<NetworkTable> visionNetworkTable;

    // Xbox controller(s)
    static std::unique_ptr<ControllerState> controllerState1;
    static std::unique_ptr<ControllerState> controllerState2;

    // Command Groups
    static std::unique_ptr<Teleop> teleop;

	void RobotInit() override;
	void DisabledInit() override;
	void DisabledPeriodic() override;
	void AutonomousInit() override;
	void AutonomousPeriodic() override;
	void TeleopInit() override;
	void TeleopPeriodic() override;
};
#endif
