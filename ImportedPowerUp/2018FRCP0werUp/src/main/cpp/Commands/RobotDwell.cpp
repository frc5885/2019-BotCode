// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#include "RobotDwell.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

RobotDwell::RobotDwell(double dwellTime): frc::Command() {
    m_dwellTime = dwellTime;
        // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void RobotDwell::Initialize()
{
	m_timer.Reset();
	m_timer.Start();
	printf("Dwell initialized\n");
}

// Called repeatedly when this Command is scheduled to run
void RobotDwell::Execute()
{

}

// Make this return true when this Command no longer needs to run execute()
bool RobotDwell::IsFinished()
{
	bool finished = (m_timer.Get() > m_dwellTime);

	if (finished) {
		printf("Dwell finished.\n");
	}

	return finished;
}

// Called once after isFinished returns true
void RobotDwell::End()
{
	printf("Dwell ended.\n");
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void RobotDwell::Interrupted() {

}
